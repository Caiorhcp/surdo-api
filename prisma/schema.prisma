generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Professor {
  id        String   @id @default(uuid())
  nome      String
  email     String   @unique
  // alunos    Aluno[]
  exercicios Exercicio[]
  FichaTreino FichaTreino[]
}

model Aluno {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  // professor Professor @relation(fields: [professorId], references: [id])
  // professorId String
  // exerciciosAluno ExercicioAluno[]
  // FichaTreino FichaTreino[] 
  createdAt DateTime
}

model Exercicio {
  id          String   @id @default(uuid())
  nome        String
  descricao   String
  professor   Professor @relation(fields: [professorId], references: [id])
  professorId String
  exerciciosAluno ExercicioAluno[]
  ExercicioFichaTreino ExercicioFichaTreino[]
}

model ExercicioAluno {
  id         String   @id @default(uuid())
  //aluno      Aluno    @relation(fields: [alunoId], references: [id])
  alunoId    String
  exercicio  Exercicio @relation(fields: [exercicioId], references: [id])
  exercicioId String
  dataAtribuicao DateTime @default(now())
  status     String
}

model FichaTreino {
  id           String   @id @default(uuid())
  nome         String
  //aluno        Aluno    @relation(fields: [alunoId], references: [id])
  alunoId      String
  professor    Professor @relation(fields: [professorId], references: [id])
  professorId  String
  exercicios   ExercicioFichaTreino[]
  dataCriacao  DateTime @default(now())
}

model ExercicioFichaTreino {
  id            String   @id @default(uuid())
  fichaTreino   FichaTreino  @relation(fields: [fichaTreinoId], references: [id])
  fichaTreinoId String
  exercicio     Exercicio    @relation(fields: [exercicioId], references: [id])
  exercicioId   String
  ordem         Int
  repeticoes    Int
  series        Int
}